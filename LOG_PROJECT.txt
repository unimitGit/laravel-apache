
WEB PROJECT PHP APACHE LARAVEL

DEVELOPED BY: JOSE LUIS PABON BURBANO - COLOMBIA

-----------------------------------------------------
-----------------------------------------------------

OPERATING SYSTEM: LINUX MINT 20.3

lsb_release -a

Distributor ID:	Linuxmint
Description:	Linux Mint 20.3
Release:	20.3
Codename:	una

BASED IN UBUNTU: 20.04

cat /etc/upstream-release/lsb-release

DISTRIB_ID=Ubuntu
DISTRIB_RELEASE=20.04
DISTRIB_CODENAME=focal
DISTRIB_DESCRIPTION="Ubuntu Focal Fossa"

-----------------------------------------------------
DEVELOPMENT ENVIRONMENT: DOCKER 20.10.21

docker --version
Docker version 20.10.21, build baeda1f

docker-compose version supported  3.8

https://docs.docker.com/compose/compose-file/compose-file-v3/

-----------------------------------------------------
IDE  VISUAL STUDIO CODE v1.73.0

PHP EXTENSIONS

- php debug v1.29 by CODESTREAM
- php inteliphense
- php tools
- laravel artisan
- laravel blade snippets

look into "more info" the identifier
-----------------------------------------------------

PHP LARAVEL 9

REQUIREMENTS

PHP 8.0

Composer


-----------------------------------------------------

DIRECTORY STRUCTURE IN THE CONTAINER

APCH_LRV

	+ .devcontainer
		devcontainer.json

	+ volumes
        apache-content

	docker-compose.yml

	apache2.conf

    Dockerfile

    90-xdebug.ini


-----------------------------------------------------
CONFIGURING .devcontainer

create devcontainer.json

{
	"name": "APCH_LRV",
	"dockerComposeFile": "../docker-compose.yml",
	"service": "",
	"workspaceFolder": "/var/www/html",
	"shutdownAction":"stopCompose",
	"customizations": {		
		"vscode": {						
			"extensions": [
				"xdebug.php-debug",
				"bmewburn.vscode-intelephense-client",
				"devsense.phptools-vscode",
				"ryannaddy.laravel-artisan",
				"onecentlin.laravel-blade",
				"mrmlnc.vscode-apache"
			]
		}
	}
}

-----------------------------------------------------

docker-compose.yml (parcial)

version: '3'  // <-- I get errors with version: '3.8'

services:

  php:
    build:
        context: .
        dockerfile: Dockerfile
    container_name: apache-php
    restart: unless-stopped
    volumes:
      - ./volumes/apache-content:/var/www/html
      - ./volumes/xdebug-content:/usr/local/etc/php/conf.d

    networks:
        apache_laravel_network:
            ipv4_address: 172.18.0.2
    ports:
      - 80:80


networks:
  apache_laravel_network:
    driver: bridge
    ipam:
     config:
       - subnet: 172.18.0.0/16


-----------------------------------------------------
LIST MODULES IN PHP INSIDE THE CONTAINER

php -m

root@9e95093b62ef:/var/www/html# php -m
[PHP Modules]
Core
ctype
curl
date
dom
fileinfo
filter
ftp
hash
iconv
json
libxml
mbstring
mysqlnd
openssl
pcre
PDO
pdo_sqlite
Phar
posix
readline
Reflection
session
SimpleXML
sodium
SPL
sqlite3
standard
tokenizer
xml
xmlreader
xmlwriter
zlib


-----------------------------------------------------

Note: some packages are needed by composer when is installing packages

Dockerfile (parcial)

FROM php:8.0-apache


RUN apt update \
        && apt install -y \
            g++ \
            libicu-dev \
            libpq-dev \
            libzip-dev \
            zip \
            zlib1g-dev \
            nano \
            lynx \
        && docker-php-ext-install \
            intl \
            opcache \
            pdo \
            pdo_pgsql \
            pgsql \
            pdo_mysql

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

RUN pecl install xdebug \
    && docker-php-ext-enable xdebug

ENV APACHE_DOCUMENT_ROOT /var/www/html/joruevo/public

RUN sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/sites-available/*.conf

RUN sed -ri -e 's!/var/www/!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf

COPY apache2.conf /etc/apache2/

RUN a2enmod rewrite

RUN service apache2 restart
-----------------------------------------------------

CONFIGURING XDEBUG

90-xdebug.ini

zend_extension=xdebug.so
xdebug.mode=debug
xdebug.start_with_request=yes
xdebug.discover_client_host=0
xdebug.client_host=172.18.0.5
xdebug.idekey = VSCODE

-----------------------------------------------------
CREATING JORUEVO PROJECT

/var/www/html

composer create-project laravel/laravel joruevo

**************

ERROR

permissions error

/var/www/html/joruevo/storage/logs/

SOLUTION

/var/www/html/joruevo/storage# chmod 777 logs  <-- only for demo

**************

ERROR
permission error

/var/www/html/joruevo/storage/framework/sessions/

SOLUTION

/var/www/html/joruevo/storage/framework# chmod 777 sessions <-- only for demo

**************

ERROR
permission error

/var/www/html/joruevo/storage/framework/views/

SOLUTION

/var/www/html/joruevo/storage/framework# chmod 777 views <-- only for demo

**************

ERROR
permission error

/var/www/html/joruevo/bootstrap/cache

SOLUTION

/var/www/html/joruevo/bootstrap# chmod 777 cache <-- only for demo


-----------------------------------------------------

modifying laravel directory structure for DDD

based on

https://www.hibit.dev/posts/43/domain-driven-design-with-laravel-9


in App create directories:

App

    Application

    Domain

    Infrastructure

    UserInterface
        
        Console

        Controller



* Create app/Infrastructure/Laravel folder [v]

* Remove app/Http/Models/User.php  [v]

* Move the base controller app/Http/Controllers/Controller.php to app/Infrastructure/Laravel/Controller.php [x]

* Move HTTP Kernel app/Http/Kernel.php to app/Infrastructure/Laravel/Kernel/Http.php [x]

    ORIGINAL

    class Kernel extends HttpKernel ..


    MODIFICATION

    class Http extends HttpKernel


* Move Console Kernel app/Console/Kernel.php to app/Infrastructure/Laravel/Kernel/Console.php [x]


    ORIGINAL

    class Kernel extends ConsoleKernel

    MODIFICATION

    class Console extends ConsoleKernel


* Move app/Exceptions/Handler.php to app/Infrastructure/Laravel/Exception/Handler.php [x]


* Update bootstrap/app.php to point the correct Kernels and exception handler [x]

    ORIGINAL

    $app->singleton(
        Illuminate\Contracts\Http\Kernel::class,
        App\Http\Kernel::class
    );

    $app->singleton(
        Illuminate\Contracts\Console\Kernel::class,
        App\Console\Kernel::class
    );

    $app->singleton(
        Illuminate\Contracts\Debug\ExceptionHandler::class,
        App\Exceptions\Handler::class
    );

    MODIFIED

    $app->singleton(
        Illuminate\Contracts\Http\Kernel::class,
        App\Infrastructure\Laravel\Kernel\Http::class   <--
    );

    $app->singleton(
        Illuminate\Contracts\Console\Kernel::class,
        App\Infrastructure\Laravel\Kernel\Console::class   <--
    );

    $app->singleton(
        Illuminate\Contracts\Debug\ExceptionHandler::class,
        App\Infrastructure\Laravel\Exception\Handler::class   <--
    );


* Move app/Providers/* to app/Infrastructure/Laravel/Providers [x]

* Update config/app.php to point the correct Providers  [x]


    ORIGINAL


             * Application Service Providers...
             */
            App\Providers\AppServiceProvider::class,
            App\Providers\AuthServiceProvider::class,
            // App\Providers\BroadcastServiceProvider::class,
            App\Providers\EventServiceProvider::class,
            App\Providers\RouteServiceProvider::class,

        ],


    MODIFIED

             * Application Service Providers...
             */
            App\Infrastructure\Laravel\Provider\AppServiceProvider::class,
            App\Infrastructure\Laravel\Provider\AuthServiceProvider::class,
            // App\Providers\BroadcastServiceProvider::class,
            App\Infrastructure\Laravel\Provider\EventServiceProvider::class,
            App\Infrastructure\Laravel\Provider\RouteServiceProvider::class,


* Move app/Http/Middleware/* to app/Infrastructure/Laravel/Middleware  [x]


* Update the HTTP Kernel to point the correct middleware  [x]

    app/Infrastructure/Laravel/Kernel/Http.php

    class Http extends HttpKernel
    {
        /**
         * The application's global HTTP middleware stack.
         *
         * These middleware are run during every request to your application.
         *
         * @var array<int, class-string|string>
         */
        protected $middleware = [
            // \App\Http\Middleware\TrustHosts::class,
            //\App\Http\Middleware\TrustProxies::class,
            \App\Infrastructure\Laravel\Middleware\TrustProxies::class,  <--
            \Illuminate\Http\Middleware\HandleCors::class,
            //\App\Http\Middleware\PreventRequestsDuringMaintenance::class,
            \App\Infrastructure\Laravel\Middleware\PreventRequestsDuringMaintenance::class,  <--
            \Illuminate\Foundation\Http\Middleware\ValidatePostSize::class,
            //\App\Http\Middleware\TrimStrings::class,
            \App\Infrastructure\Laravel\Middleware\TrimStrings::class,  <--
            \Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull::class,
        ];

        /**
         * The application's route middleware groups.
         *
         * @var array<string, array<int, class-string|string>>
         */
        protected $middlewareGroups = [
            'web' => [
                //\App\Http\Middleware\EncryptCookies::class,
                \App\Infrastructure\Laravel\Middleware\EncryptCookies::class,  <--
                \Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse::class,
                \Illuminate\Session\Middleware\StartSession::class,
                \Illuminate\View\Middleware\ShareErrorsFromSession::class,
                //\App\Http\Middleware\VerifyCsrfToken::class,
                \App\Infrastructure\Laravel\Middleware\VerifyCsrfToken::class,  <--
                \Illuminate\Routing\Middleware\SubstituteBindings::class,
            ],

            'api' => [
                // \Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful::class,
                'throttle:api',
                \Illuminate\Routing\Middleware\SubstituteBindings::class,
            ],
        ];

        /**
         * The application's route middleware.
         *
         * These middleware may be assigned to groups or used individually.
         *
         * @var array<string, class-string|string>
         */
        protected $routeMiddleware = [
            //'auth' => \App\Http\Middleware\Authenticate::class,
            'auth' => \App\Infrastructure\Laravel\Middleware\Authenticate::class,  <--
            'auth.basic' => \Illuminate\Auth\Middleware\AuthenticateWithBasicAuth::class,
            'auth.session' => \Illuminate\Session\Middleware\AuthenticateSession::class,
            'cache.headers' => \Illuminate\Http\Middleware\SetCacheHeaders::class,
            'can' => \Illuminate\Auth\Middleware\Authorize::class,
            //'guest' => \App\Http\Middleware\RedirectIfAuthenticated::class,
            'guest' => \App\Infrastructure\Laravel\Middleware\RedirectIfAuthenticated::class,  <--
            'password.confirm' => \Illuminate\Auth\Middleware\RequirePassword::class,
            //'signed' => \App\Http\Middleware\ValidateSignature::class,
            'signed' => \App\Infrastructure\Laravel\Middleware\ValidateSignature::class,  <--
            'throttle' => \Illuminate\Routing\Middleware\ThrottleRequests::class,
            'verified' => \Illuminate\Auth\Middleware\EnsureEmailIsVerified::class,
        ];
    }

-----------------------------------

ERROR

RedirectIfAuthenticated.php

use App\Providers\RouteServiceProvider;  <-- error

SOLUTION

use App\Infrastructure\Laravel\Provider\RouteServiceProvider;

-----------------------------------

* delete Console directory [x]

* delete Exceptions directory [x]

* delete Http/Controllers & Http/Middleware [x]

* delete Providers [x]

-----------------------------------------------------
-----------------------------------------------------



